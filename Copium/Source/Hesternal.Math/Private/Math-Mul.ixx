// !!! GENERATED BY MathTool !!!
export module Copium.Math:Mul;

import :Float3;
import :Float3x3;
import :Float4;
import :Float4x4;


export namespace Copium::Math
{

    [[nodiscard]] constexpr Float3 Mul(const Float3& lhs, const Float3x3& rhs) noexcept
    {
        return Float3(lhs.X * rhs.C0.X + lhs.Y * rhs.C0.Y + lhs.Z * rhs.C0.Z,
                      lhs.X * rhs.C1.X + lhs.Y * rhs.C1.Y + lhs.Z * rhs.C1.Z,
                      lhs.X * rhs.C2.X + lhs.Y * rhs.C2.Y + lhs.Z * rhs.C2.Z);
    }

    [[nodiscard]] constexpr Float3 Mul(const Float3x3& lhs, const Float3& rhs) noexcept
    {
        return Float3(lhs.C0 * rhs.X + lhs.C1 * rhs.Y + lhs.C2 * rhs.Z);
    }

    [[nodiscard]] constexpr Float3x3 Mul(const Float3x3& lhs, const Float3x3& rhs) noexcept
    {
        return Float3x3(lhs.C0 * rhs.C0.X + lhs.C1 * rhs.C0.Y + lhs.C2 * rhs.C0.Z,
                        lhs.C0 * rhs.C1.X + lhs.C1 * rhs.C1.Y + lhs.C2 * rhs.C1.Z,
                        lhs.C0 * rhs.C2.X + lhs.C1 * rhs.C2.Y + lhs.C2 * rhs.C2.Z);
    }

    [[nodiscard]] constexpr Float4 Mul(const Float4& lhs, const Float4x4& rhs) noexcept
    {
        return Float4(lhs.X * rhs.C0.X + lhs.Y * rhs.C0.Y + lhs.Z * rhs.C0.Z + lhs.W * rhs.C0.W,
                      lhs.X * rhs.C1.X + lhs.Y * rhs.C1.Y + lhs.Z * rhs.C1.Z + lhs.W * rhs.C1.W,
                      lhs.X * rhs.C2.X + lhs.Y * rhs.C2.Y + lhs.Z * rhs.C2.Z + lhs.W * rhs.C2.W,
                      lhs.X * rhs.C3.X + lhs.Y * rhs.C3.Y + lhs.Z * rhs.C3.Z + lhs.W * rhs.C3.W);
    }

    [[nodiscard]] constexpr Float4 Mul(const Float4x4& lhs, const Float4& rhs) noexcept
    {
        return Float4(lhs.C0 * rhs.X + lhs.C1 * rhs.Y + lhs.C2 * rhs.Z + lhs.C3 * rhs.W);
    }

    [[nodiscard]] constexpr Float4x4 Mul(const Float4x4& lhs, const Float4x4& rhs) noexcept
    {
        return Float4x4(lhs.C0 * rhs.C0.X + lhs.C1 * rhs.C0.Y + lhs.C2 * rhs.C0.Z + lhs.C3 * rhs.C0.W,
                        lhs.C0 * rhs.C1.X + lhs.C1 * rhs.C1.Y + lhs.C2 * rhs.C1.Z + lhs.C3 * rhs.C1.W,
                        lhs.C0 * rhs.C2.X + lhs.C1 * rhs.C2.Y + lhs.C2 * rhs.C2.Z + lhs.C3 * rhs.C2.W,
                        lhs.C0 * rhs.C3.X + lhs.C1 * rhs.C3.Y + lhs.C2 * rhs.C3.Z + lhs.C3 * rhs.C3.W);
    }

} // export namespace Copium::Math
